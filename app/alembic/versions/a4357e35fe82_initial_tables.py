"""Initial tables

Revision ID: a4357e35fe82
Revises: 
Create Date: 2024-05-26 00:13:18.547803

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "a4357e35fe82"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum(
        "victory", "loss", "progress", "cancelled", name="gamestatusenum", schema="game"
    ).create(op.get_bind())
    op.create_table(
        "game_sessions",
        sa.Column(
            "game_status",
            postgresql.ENUM(
                "victory",
                "loss",
                "progress",
                "cancelled",
                name="gamestatusenum",
                schema="game",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("timeout", sa.Integer(), nullable=False),
        sa.Column(
            "id",
            sa.UUID(as_uuid=False),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column(
            "created",
            sa.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "modified",
            sa.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
        schema="game",
    )
    op.create_table(
        "questions",
        sa.Column("question", sa.String(), nullable=False),
        sa.Column("answer", sa.String(), nullable=False),
        sa.Column(
            "id",
            sa.UUID(as_uuid=False),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column(
            "created",
            sa.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "modified",
            sa.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
        schema="game",
    )
    op.create_table(
        "users",
        sa.Column("tg_user_id", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("user_name", sa.String(), nullable=True),
        sa.Column(
            "id",
            sa.UUID(as_uuid=False),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column(
            "created",
            sa.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "modified",
            sa.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
        sa.UniqueConstraint("tg_user_id"),
        schema="game",
    )
    op.create_table(
        "question_game_session_association",
        sa.Column("question_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("game_session_id", sa.UUID(as_uuid=False), nullable=False),
        sa.ForeignKeyConstraint(
            ["game_session_id"],
            ["game.game_sessions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["game.questions.id"],
        ),
        sa.PrimaryKeyConstraint("question_id", "game_session_id"),
        schema="game",
    )
    op.create_table(
        "user_answers",
        sa.Column("answer", sa.String(), nullable=False),
        sa.Column("is_correct", sa.Boolean(), nullable=False),
        sa.Column("game_session", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("user_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("question_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column(
            "id",
            sa.UUID(as_uuid=False),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column(
            "created",
            sa.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "modified",
            sa.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["game_session"],
            ["game.game_sessions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["game.questions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["game.users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
        schema="game",
    )
    op.create_table(
        "user_game_session_association",
        sa.Column("user_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("game_session_id", sa.UUID(as_uuid=False), nullable=False),
        sa.ForeignKeyConstraint(
            ["game_session_id"],
            ["game.game_sessions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["game.users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "game_session_id"),
        schema="game",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("victory", "loss", "progress", "cancelled", name="gamestatusenum").drop(
        op.get_bind()
    )
    op.drop_table("user_game_session_association", schema="game")
    op.drop_table("user_answers", schema="game")
    op.drop_table("question_game_session_association", schema="game")
    op.drop_table("users", schema="game")
    op.drop_table("questions", schema="game")
    op.drop_table("game_sessions", schema="game")
    sa.Enum(
        "victory", "loss", "progress", "cancelled", name="gamestatusenum", schema="game"
    ).drop(op.get_bind())
    # ### end Alembic commands ###
